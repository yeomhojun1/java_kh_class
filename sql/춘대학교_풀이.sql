--춘대학교 1-1
SELECT DEPARTMENT_NAME 학과명, CATEGORY 계열
FROM TB_DEPARTMENT;
--춘대학교 2-2
SELECT DEPARTMENT_NAME||'의 정원은'||CAPACITY||'명 입니다.' AS "학과별 정원"
FROM TB_DEPARTMENT
;
--춘대학교 1-3
SELECT STUDENT_NAME
FROM TB_STUDENT S
WHERE SUBSTR(STUDENT_SSN,8,1)=2 AND ABSENCE_YN='Y' AND 
(SELECT DEPARTMENT_NAME FROM TB_DEPARTMENT D WHERE S.DEPARTMENT_NO= D.DEPARTMENT_NO)='국어국문학과';
--춘대학교 1-4
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE STUDENT_NO IN ('A513079', 'A513090', 'A513091','A513110','A513119');
--춘대학교 1-5
SELECT DEPARTMENT_NAME, CATEGORY
FROM TB_DEPARTMENT
WHERE CAPACITY BETWEEN 20 AND 30;
--춘대학교 1-6
SELECT PROFESSOR_NAME
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO IS NULL;
--춘대학교 1-7
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE DEPARTMENT_NO IS NULL;
--춘대학교 1-8
SELECT CLASS_NO
FROM TB_CLASS
WHERE PREATTENDING_CLASS_NO IS NOT NULL;
--춘대학교 1-9
SELECT DISTINCT CATEGORY
FROM TB_DEPARTMENT;
--춘대학교 1-10
SELECT STUDENT_NO, STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN='N' 
AND EXTRACT(YEAR FROM ENTRANCE_DATE)=2002
AND STUDENT_ADDRESS LIKE '%전주%'
;
--춘대학교 2-1
SELECT STUDENT_NO 학번, STUDENT_NAME 이름, ENTRANCE_DATE 입학년도
FROM TB_STUDENT
WHERE DEPARTMENT_NO='002';
--춘대학교 2-2
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE LENGTH(PROFESSOR_NAME)!=3;
--춘대학교 2-3
SELECT PROFESSOR_NAME 교수이름,
    CASE WHEN (floor((sysdate - to_date(substr(PROFESSOR_SSN, 1,6), 'rrmmdd'))/365))>0 
    THEN (floor((sysdate - to_date(substr(PROFESSOR_SSN, 1,6), 'rrmmdd'))/365))
    WHEN (floor((sysdate - to_date(substr(PROFESSOR_SSN, 1,6), 'rrmmdd'))/365))<0
    THEN (floor((sysdate - to_date(substr(PROFESSOR_SSN, 1,6), 'rrmmdd'))/365))+100
    END AS 나이
FROM TB_PROFESSOR
ORDER BY 2 ASC
;
--춘대학교 2-4
SELECT SUBSTR(PROFESSOR_NAME,2) AS 이름
FROM TB_PROFESSOR;
--춘대학교 2-5
SELECT * FROM (
SELECT STUDENT_NO, STUDENT_NAME,FLOOR((SYSDATE - TO_DATE(SUBSTR(STUDENT_SSN,1,6),'RRMMDD'))/365) 나이
FROM TB_STUDENT
) TB1
WHERE TB1.나이 >20
;
--춘대학교 2-6
select to_char(to_date(20201225, 'yyyymmdd'), 'dy') as "2020년 크리스마스"
    from dual;
--춘대학교 2-7
SELECT TO_DATE('99/10/11','YY/MM/DD'), TO_DATE('49/10/11','YY/MM/DD')
FROM DUAL;
--춘대학교 2-8
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE SUBSTR(STUDENT_NO,1,1) !='A';
--춘대학교 2-9
SELECT ROUND(AVG(POINT),1) 평점
FROM TB_GRADE
WHERE STUDENT_NO = 'A517178'
GROUP BY STUDENT_NO
;
--춘대학교 2-10
SELECT DEPARTMENT_NO 학과번호, COUNT(STUDENT_NO) 학생수
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO ;
--춘대학교 2-11
SELECT COUNT(*)
FROM TB_STUDENT
WHERE COACH_PROFESSOR_NO IS NULL;
--춘대학교 2-12
SELECT SUBSTR(TERM_NO,1,4), ROUND(AVG(POINT),1)
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY SUBSTR(TERM_NO,1,4);
--춘대학교 2-13
SELECT DEPARTMENT_NO 학과코드명, COUNT(*) 
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
GROUP BY DEPARTMENT_NO
ORDER BY 1
;
--춘대학교 2-14
SELECT STUDENT_NAME, COUNT(STUDENT_NAME)
FROM TB_STUDENT
GROUP BY STUDENT_NAME
HAVING COUNT(STUDENT_NAME)>1
;
--춘대학교 2-15
SELECT SUBSTR(TERM_NO,1,4) 학년,SUBSTR(TERM_NO,5,2) 학기, ROUND(AVG(POINT),1)
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY ROLLUP(SUBSTR(TERM_NO,1,4),SUBSTR(TERM_NO,5,2))
ORDER BY 1;
--춘대학교 3-1
SELECT STUDENT_NAME 학생이름, STUDENT_ADDRESS "주소지"
FROM TB_STUDENT
ORDER BY 1
;
--춘대학교 3-2
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY SUBSTR(STUDENT_SSN,1,6) DESC
;
--춘대학교 3-3
SELECT STUDENT_NAME, STUDENT_NO, STUDENT_ADDRESS
FROM TB_STUDENT
WHERE (STUDENT_ADDRESS LIKE '%경기%' OR  STUDENT_ADDRESS LIKE '%강원%') AND SUBSTR(STUDENT_NO,1,1) != 'A' ;
--춘대학교 3-4
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_DEPARTMENT 
WHERE DEPARTMENT_NO =(SELECT DEPARTMENT_NO FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME = '법학과')
;
--춘대학교 3-5
SELECT STUDENT_NO, POINT
FROM TB_GRADE
WHERE CLASS_NO='C3118100' AND TERM_NO=200402
ORDER BY 2 DESC, 1 ASC
;
--춘대학교 3-6
SELECT STUDENT_NO, STUDENT_NAME,(SELECT DEPARTMENT_NAME FROM TB_DEPARTMENT D WHERE E.DEPARTMENT_NO = D.DEPARTMENT_NO) DEPARTMENT_NAME
FROM TB_STUDENT E
ORDER BY 2 ;
--춘대학교 3-7
SELECT CLASS_NAME, (SELECT DEPARTMENT_NAME FROM TB_DEPARTMENT D WHERE C.DEPARTMENT_NO = D.DEPARTMENT_NO)
FROM TB_CLASS C
ORDER BY 2
;
--춘대학교 3-8
SELECT CLASS_NAME,
(SELECT PROFESSOR_NAME FROM TB_PROFESSOR P1 WHERE P.PROFESSOR_NO = P1.PROFESSOR_NO) FROM TB_CLASS_PROFESSOR P WHERE C.CLASS_NO = P.CLASS_NO)
FROM TB_CLASS C
;



--테이블들
SELECT * FROM "TB_CLASS_PROFESSOR";
SELECT * FROM "TB_GRADE";
SELECT * FROM "TB_CLASS";
SELECT * FROM "TB_STUDENT";
SELECT * FROM "TB_PROFESSOR";
SELECT * FROM "TB_DEPARTMENT";
-- 3-15
select student_no, round(avg(point), 1) avgpoint
    from (select * from tb_student where absence_yn<>'Y') s
        join tb_department d using (department_no)
        join tb_grade g using (student_no)
    group by student_no
;
desc tb_department;
desc tb_grade;
    --춘대학교 3-15
SELECT  STUDENT_NAME
, (SELECT DEPARTMENT_NAME FROM TB_DEPARTMENT T WHERE T.DEPARTMENT_NO = S.DEPARTMENT_NO) DEPARTMENT_NAME
, ROUND(AVG(POINT),1) AVGPOINT
    FROM (SELECT * FROM TB_STUDENT  WHERE ABSENCE_YN<>'Y') S
        JOIN TB_DEPARTMENT  D USING (DEPARTMENT_NO)
        JOIN TB_GRADE G USING (STUDENT_NO)
        GROUP BY STUDENT_NO, STUDENT_NAME --동명이인이 있을까봐 그룹바이를 했고 그룹바이를해야지 SELECT를 할수있음
        HAVING AVG(POINT)>=4--라운드하면 안됨, 3.99은 추출되지 않아야함
        ;
--3-18
SELECT TB2.* 
    FROM
        (SELECT  ROWNUM RN,TB1.*
        FROM
            (SELECT  STUDENT_NAME , AVG(POINT) AVGPOINT
            FROM
                (SELECT * FROM TB_STUDENT WHERE DEPARTMENT_NO=
                     (SELECT DEPARTMENT_NO FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME ='국어국문학과')) S
   
        JOIN TB_GRADE G USING (STUDENT_NO)
       GROUP BY STUDENT_NO, STUDENT_NAME
      ORDER BY AVGPOINT DESC) TB1
      ) TB2
     WHERE RN=3
       ;
SELECT  STUDENT_NAME , AVG(POINT) AVGPOINT
            FROM
                (SELECT * FROM TB_STUDENT WHERE DEPARTMENT_NO=
                     (SELECT DEPARTMENT_NO FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME ='국어국문학과')) S
   
        JOIN TB_GRADE G USING (STUDENT_NO)
       GROUP BY STUDENT_NO, STUDENT_NAME
       HAVING AVG(POINT) = ( SELECT MAX(AVG(POINT)) FROM TB_GRADE G GROUP BY G.STUDENT_NO)
    ;
SELECT STUDENT_NO, (AVG(POINT)) 
FROM TB_GRADE G 
WHERE STUDENT_NO IN  (SELECT * FROM TB_STUDENT WHERE DEPARTMENT_NO=
                     (SELECT DEPARTMENT_NO FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME ='국어국문학과')) 
   
GROUP BY G.STUDENT_NO;

--4페이지 10. 보너스 포함한 연봉이 높은 4명의 사버느 이름ㅡ 부서명 ㅡ 직급, 입사일, 순위 조회
SELECT EMP_NO,EMP_NAME,(SELECT DEPT_TITLE FROM DEPARTMENT D WHERE DEPT_ID = E.DEPT_CODE ) 부서명 , JOB_CODE,HIRE_DATE
    FROM EMPLOYEE E;

SELECT TB2.* FROM
(
SELECT TB1.* ,ROWNUM RN FROM
(SELECT EMP_ID,EMP_NAME, SALARY*12+NVL(BONUS, 0)*SALARY SAL_RANK 
FROM EMPLOYEE ORDER BY SAL_RANK DESC) TB1 
 ) TB2       
 WHERE RN<=5
;    
SELECT EMP_ID,EMP_NAME, SALARY*12+NVL(BONUS, 0)*SALARY SAL_RANK FROM EMPLOYEE ORDER BY SAL_RANK DESC; 
    
    
--입사일 순서가 빠른사람 3명을 조회해주세요

SELECT TB1.*, ROWNUM FROM
(
SELECT EMP_NAME, HIRE_DATE
    FROM EMPLOYEE E
    ORDER BY EXTRACT(YEAR FROM HIRE_DATE) ASC
 ) TB1
 
    
    WHERE ROWNUM<=3;
    
--춘대학교 최근 3년을 기준으로 수강인원이 가장 많았던 3 과목을 찾으시오
DESC TB_CLASS;
DESC TB_STUDENT;
SELECT TERM_NO FROM TB_GRADE GROUP BY TERM_NO ORDER BY TERM_NO ;
--최근 3년
SELECT TERM CURR_TERM FROM
(
SELECT DISTINCT SUBSTR(TERM_NO,1,4) TERM FROM TB_GRADE GROUP BY TERM_NO ORDER BY TERM DESC 
) TB1    
WHERE ROWNUM <=3;
--수강인원(CLASS_NO별)
SELECT COUNT(*) CNT, CLASS_NO
    FROM TB_GRADE
    WHERE SUBSTR(TERM_NO,1,4) IN (SELECT DISTINCT SUBSTR(TERM_NO,1,4) TERM FROM TB_GRADE GROUP BY TERM_NO ORDER BY TERM DESC) 

    GROUP BY CLASS_NO
    ORDER BY CNT DESC
    ;
--수강인원 TOP3==>이걸 N-TOP방식으로 해달라는말은 ROWNUM써달라는말 (CLASS_NO별)    

SELECT * FROM
(
SELECT COUNT(*) CNT, CLASS_NO
    FROM TB_GRADE
    GROUP BY CLASS_NO
    ORDER BY CNT DESC
    )
    WHERE 


